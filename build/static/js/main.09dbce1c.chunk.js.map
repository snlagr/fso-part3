{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/phonebook.js","App.js","index.js"],"names":["Persons","persons","searchFilter","deletePerson","filter","e","name","toLowerCase","includes","map","person","number","onClick","id","PersonForm","newName","setNewName","newNumber","setNewNumber","value","onChange","event","target","type","Filter","setSearchFilter","baseUrl","phonebookService","getAll","axios","get","then","response","data","create","newObject","post","delete","update","put","Notification","message","style","className","App","useState","setPersons","setMessage","setStyle","useEffect","names","onSubmit","preventDefault","nameObject","some","replaceId","window","confirm","returnedPerson","setTimeout","catch","err","p","newPerson","concat","personToDelete","res","ReactDOM","render","document","getElementById"],"mappings":"6KAgBeA,EAdC,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aACrC,OACEF,EACGG,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,cAAcC,SAASN,EAAaK,kBACvDE,KAAI,SAAAC,GACH,OACE,gCACGA,EAAOJ,KADV,IACiBI,EAAOC,OADxB,IACgC,wBAAQC,QAAS,kBAAMT,EAAaO,EAAOG,KAA3C,sBADtBH,EAAOJ,UCUdQ,EAhBI,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACjD,OACE,iCACE,yCACQ,uBAAOC,MAAOJ,EAASK,SAAU,SAACC,GAAD,OAAWL,EAAWK,EAAMC,OAAOH,aAE5E,2CACU,uBAAOA,MAAOF,EAAWG,SAAU,SAACf,GAAD,OAAOa,EAAab,EAAEiB,OAAOH,aAE1E,8BACE,wBAAQI,KAAK,SAAb,uBCFKC,EARA,SAAC,GAAqC,IAApCtB,EAAmC,EAAnCA,aAAcuB,EAAqB,EAArBA,gBAC3B,OACE,0DACoB,uBAAON,MAAOjB,EAAckB,SAAU,SAACf,GAAD,OAAOoB,EAAgBpB,EAAEiB,OAAOH,c,gBCJ1FO,EAAU,eAuBDC,EADU,CAACC,OApBX,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBXC,OAfnB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaH9B,aALrB,SAAAU,GAEjB,OADgBgB,IAAMQ,OAAN,UAAgBX,EAAhB,YAA2Bb,IAC5BkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGWK,OAVzC,SAACzB,EAAIsB,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBb,GAAMsB,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCTvCO,EAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/B,OAAgB,OAAZD,EACK,KAIP,qBAAKE,UAAWD,EAAhB,SACGD,KA+FQG,EA1FH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQ5C,EAAR,KAAiB6C,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQ9B,EAAR,KAAiBC,EAAjB,KACA,EAAoC6B,mBAAS,IAA7C,mBAAQ5B,EAAR,KAAmBC,EAAnB,KACA,EAA0C2B,mBAAS,IAAnD,mBAAQ3C,EAAR,KAAsBuB,EAAtB,KACA,EAAgCoB,mBAAS,MAAzC,mBAAQJ,EAAR,KAAiBM,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAQH,EAAR,KAAeM,EAAf,KAEAC,qBAAU,WACRtB,EACGC,SACAG,MAAK,SAAAmB,GACJJ,EAAWI,QAEd,IA+DH,OACE,sBAAKC,SA9DW,SAAC9B,GACjBA,EAAM+B,iBACN,IAAMC,EAAa,CACjB/C,KAAMS,EACNJ,OAAQM,GAEV,GAAIhB,EAAQqD,MAAK,SAAAjD,GAAC,OAAIA,EAAEC,OAASS,KAAU,CACzC,IAAMwC,EAAYtD,EAAQG,QAAO,SAAAM,GAAM,OAAIA,EAAOJ,OAASS,KAAS,GAAGF,GAoBvE,OAnBgB2C,OAAOC,QAAP,UAAkB1C,EAAlB,4EAEdY,EACGW,OAAOiB,EAAWF,GAClBtB,MAAK,SAAA2B,GACJX,EAAW,WAAD,OAAYW,EAAepD,OACrC0C,EAAS,WACTW,YAAW,WAAOZ,EAAW,QAAQ,KACrCD,EAAW7C,EAAQQ,KAAI,SAAAC,GAAM,OAAIA,EAAOG,KAAO0C,EAAY7C,EAASgD,SAErEE,OAAM,SAAAC,GACLd,EAAW,kBAAD,OAAmBhC,EAAnB,0CACViC,EAAS,SACTW,YAAW,WAAOZ,EAAW,QAAQ,KACrCD,EAAW7C,EAAQG,QAAO,SAAA0D,GAAC,OAAIA,EAAExD,OAASS,SAGhDC,EAAW,SACXE,EAAa,IAGfS,EACGO,OAAOmB,GACPtB,MAAK,SAAAgC,GACJhB,EAAW,SAAD,OAAUgB,EAAUzD,OAC9B0C,EAAS,WACTW,YAAW,WAAOZ,EAAW,QAAQ,KACrCD,EAAW7C,EAAQ+D,OAAOD,IAC1B/C,EAAW,IACXE,EAAa,QAyBjB,UACE,2CACA,cAAC,EAAD,CAAcuB,QAASA,EAASC,MAAOA,IACvC,cAAC,EAAD,CAAQxC,aAAcA,EAAcuB,gBAAiBA,IACrD,2CACA,cAAC,EAAD,CAAYV,QAASA,EAASC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,IAC1F,yCACA,cAAC,EAAD,CAASjB,QAASA,EAASC,aAAcA,EAAcC,aA5BtC,SAAAU,GACnB,IAAMoD,EAAiBhE,EAAQG,QAAO,SAAAM,GAAM,OAAIA,EAAOG,KAAOA,KAAI,GAC9D2C,OAAOC,QAAP,iBAAyBQ,EAAe3D,KAAxC,QACFqB,EACGxB,aAAaU,GACbkB,MAAK,SAAAmC,GACJpB,EAAW7C,EAAQG,QAAO,SAAAM,GAAM,OAAIA,EAAOG,KAAOA,MAClDkC,EAAW,kBAAD,OAAmBkB,EAAe3D,KAAlC,sCACV0C,EAAS,WACTW,YAAW,WAAOZ,EAAW,QAAQ,QAEtCa,OAAM,SAAAC,GACLd,EAAW,kBAAD,OAAmBkB,EAAe3D,KAAlC,0CACV0C,EAAS,SACTW,YAAW,WAAOZ,EAAW,QAAQ,KACrCD,EAAW7C,EAAQG,QAAO,SAAA0D,GAAC,OAAIA,EAAExD,OAAS2D,EAAe3D,mB,MCrFnE6D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.09dbce1c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({persons, searchFilter, deletePerson}) => {\n    return (\n      persons\n        .filter(e => e.name.toLowerCase().includes(searchFilter.toLowerCase()))\n        .map(person => {\n          return (\n            <div key={person.name}>\n              {person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button>\n            </div>\n          )\n        })\n    )\n  }\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({newName, setNewName, newNumber, setNewNumber}) => {\n    return (\n      <form>\n        <div>\n          name: <input value={newName} onChange={(event) => setNewName(event.target.value)} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({searchFilter, setSearchFilter}) => {\n    return (\n      <>\n        filter shown with <input value={searchFilter} onChange={(e) => setSearchFilter(e.target.value)} />\n      </>\n    )\n  }\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst phonebookService = {getAll, create, deletePerson, update}\nexport default phonebookService","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport phonebookService from './services/phonebook'\n\nconst Notification = ({ message, style }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={style}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchFilter, setSearchFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ style, setStyle ] = useState(\"\")\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(names => {\n        setPersons(names)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(e => e.name === newName)) {\n      const replaceId = persons.filter(person => person.name === newName)[0].id\n      const replace = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (replace) {\n        phonebookService\n          .update(replaceId, nameObject)\n          .then(returnedPerson => {\n            setMessage(`Updated ${returnedPerson.name}`)\n            setStyle('success')\n            setTimeout(() => {setMessage(null)}, 5000)\n            setPersons(persons.map(person => person.id !== replaceId ? person : returnedPerson))\n          })\n          .catch(err => {\n            setMessage(`Information of ${newName} has already been removed from server`)\n            setStyle('error')\n            setTimeout(() => {setMessage(null)}, 5000)\n            setPersons(persons.filter(p => p.name !== newName))\n          })\n      }\n      setNewName('')\n      setNewNumber('')\n      return\n    }\n    phonebookService\n      .create(nameObject)\n      .then(newPerson => {\n        setMessage(`Added ${newPerson.name}`)\n        setStyle('success')\n        setTimeout(() => {setMessage(null)}, 5000)\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n  const deletePerson = id => {\n    const personToDelete = persons.filter(person => person.id === id)[0]\n    if (window.confirm(`Delete ${personToDelete.name} ?`)) {\n      phonebookService\n        .deletePerson(id)\n        .then(res => {\n          setPersons(persons.filter(person => person.id !== id))\n          setMessage(`Information of ${personToDelete.name} removed from server successfully`)\n          setStyle('success')\n          setTimeout(() => {setMessage(null)}, 5000)\n        })\n        .catch(err => {\n          setMessage(`Information of ${personToDelete.name} has already been removed from server`)\n          setStyle('error')\n          setTimeout(() => {setMessage(null)}, 5000)\n          setPersons(persons.filter(p => p.name !== personToDelete.name))\n        })\n    }\n  }\n\n  return (\n    <div onSubmit={addPerson}>\n      <h2>Phonebook</h2>\n      <Notification message={message} style={style} />\n      <Filter searchFilter={searchFilter} setSearchFilter={setSearchFilter} />\n      <h3>add a new</h3>\n      <PersonForm newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchFilter={searchFilter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}